{"ast":null,"code":"var _jsxFileName = \"/Users/valcon/Developer/BanditGamesDev.github.io-1/src/NavBar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport logo from './src/Graphics/Bandit-Text-Logo.png';\nimport \"./Style/NavBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      if (position > 0) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `nav ${isScrolled ? 'scrolled' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"site-title\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/src/Graphics/Bandit-Text-Logo.png\",\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/AboutUs\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/TheDen\",\n        children: \"The Den\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/News\",\n        children: \"News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/Projects\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/ContactUs\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"UCaI8lpZVGvPrsRoIFYRt2wv0+o=\");\n_c = NavBar;\nfunction CustomLink(_ref) {\n  _s2();\n  let {\n    to,\n    children,\n    ...props\n  } = _ref;\n  // const path = window.location.pathname\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return (\n    /*#__PURE__*/\n    // if the path is equal to the href it is active otherwise it is equal to nothing \n    _jsxDEV(\"li\", {\n      className: isActive === to ? \"active\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: to,\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s2(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n_c2 = CustomLink;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"names":["React","useState","useEffect","Link","useMatch","useResolvedPath","logo","NavBar","isScrolled","setIsScrolled","handleScroll","position","window","pageYOffset","addEventListener","passive","removeEventListener","CustomLink","to","children","props","resolvedPath","isActive","path","pathname","end"],"sources":["/Users/valcon/Developer/BanditGamesDev.github.io-1/src/NavBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\"\nimport logo from './src/Graphics/Bandit-Text-Logo.png'\nimport \"./Style/NavBar.css\"\n\nexport default function NavBar() {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect (() => {\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      if (position > 0) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`nav ${isScrolled ? 'scrolled' : ''}`}>\n      <Link to = \"/\" className = \"site-title\">\n      <img src=\"/src/Graphics/Bandit-Text-Logo.png\" alt=\"logo\" className=\"logo\" />\n    </Link>\n    <ul>\n      <CustomLink to = \"/AboutUs\">About Us</CustomLink>\n      <CustomLink to = \"/TheDen\">The Den</CustomLink>\n      <CustomLink to = \"/News\">News</CustomLink>\n      <CustomLink to = \"/Projects\">Projects</CustomLink>\n      <CustomLink to = \"/ContactUs\">Contact Us</CustomLink>\n    </ul>\n    </nav>\n  );\n}\n\nfunction CustomLink({ to, children, ...props}) {\n  // const path = window.location.pathname\n  const resolvedPath = useResolvedPath(to)\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true })\n\n  return (\n    // if the path is equal to the href it is active otherwise it is equal to nothing \n    <li className = {isActive  === to ? \"active\" : \"\"}>\n      <Link to = {to} {...props}>\n        {children}\n      </Link>\n    </li>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,IAAI,MAAM,qCAAqC;AACtD,OAAO,oBAAoB;AAAA;AAE3B,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAE,MAAM;IACf,MAAMQ,YAAY,GAAG,MAAM;MACzB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAW;MACnC,IAAIF,QAAQ,GAAG,CAAC,EAAE;QAChBF,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLA,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAEDG,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,EAAE;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAElE,OAAO,MAAM;MACXH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAG,OAAMF,UAAU,GAAG,UAAU,GAAG,EAAG,EAAE;IAAA,wBACpD,QAAC,IAAI;MAAC,EAAE,EAAG,GAAG;MAAC,SAAS,EAAG,YAAY;MAAA,uBACvC;QAAK,GAAG,EAAC,oCAAoC;QAAC,GAAG,EAAC,MAAM;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvE,eACP;MAAA,wBACE,QAAC,UAAU;QAAC,EAAE,EAAG,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACjD,QAAC,UAAU;QAAC,EAAE,EAAG,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC/C,QAAC,UAAU;QAAC,EAAE,EAAG,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC1C,QAAC,UAAU;QAAC,EAAE,EAAG,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eAClD,QAAC,UAAU;QAAC,EAAE,EAAG,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEV;AAAC,GAlCuBD,MAAM;AAAA,KAANA,MAAM;AAoC9B,SAASU,UAAU,OAA4B;EAAA;EAAA,IAA3B;IAAEC,EAAE;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC;EAC3C;EACA,MAAMC,YAAY,GAAGhB,eAAe,CAACa,EAAE,CAAC;EACxC,MAAMI,QAAQ,GAAGlB,QAAQ,CAAC;IAAEmB,IAAI,EAAEF,YAAY,CAACG,QAAQ;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EAErE;IAAA;IACE;IACA;MAAI,SAAS,EAAIH,QAAQ,KAAMJ,EAAE,GAAG,QAAQ,GAAG,EAAG;MAAA,uBAChD,QAAC,IAAI;QAAC,EAAE,EAAIA,EAAG;QAAA,GAAKE,KAAK;QAAA,UACtBD;MAAQ;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACJ;AAET;AAAC,IAbQF,UAAU;EAAA,QAEIZ,eAAe,EACnBD,QAAQ;AAAA;AAAA,MAHlBa,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}